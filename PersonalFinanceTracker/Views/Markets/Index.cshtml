@model PersonalFinanceTracker.ViewModels.MarketDataViewModel

@{
    ViewData["Title"] = "Markets";
}

<!-- Ultra-Modern Markets Page -->
<div class="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
    <!-- Glass Header -->
    <div class="bg-white/20 dark:bg-gray-800/20 backdrop-blur-xl border-b border-white/20 dark:border-gray-700/20 sticky top-0 z-50 shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <div class="w-14 h-14 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                    </div>
                    <div>
                        <h1 class="text-3xl font-bold bg-gradient-to-r from-slate-900 via-blue-900 to-purple-900 dark:from-white dark:via-blue-200 dark:to-purple-200 bg-clip-text text-transparent">
                            Financial Markets
                        </h1>
                        <p class="text-sm text-slate-600 dark:text-slate-300">market data & insights</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        
        <!-- Top Market Cards -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
            <!-- Cryptocurrency Cards -->
            <div class="lg:col-span-2">
                <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-600 to-cyan-600 p-6">
                        <div class="flex items-center justify-between">
                            <h2 class="text-xl font-bold text-white">Cryptocurrencies</h2>
                        </div>
                    </div>
                    <div class="p-6">
                        <div class="grid gap-4 max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-200 scrollbar-track-transparent">
                            @foreach (var crypto in Model.Cryptocurrencies.Take(12))
                            {
                                <div class="group bg-gradient-to-r from-white to-blue-50/50 dark:from-gray-700 dark:to-blue-900/20 rounded-2xl p-4 border border-blue-100/50 dark:border-blue-800/50 hover:shadow-lg transition-all duration-300 hover:scale-[1.02]">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center space-x-3">
                                            <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
                                                <span class="text-white font-bold text-sm">@crypto.Symbol.Substring(0, Math.Min(2, crypto.Symbol.Length))</span>
                                            </div>
                                            <div>
                                                <a href="@crypto.CoinGeckoUrl" target="_blank" class="font-semibold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                                                    @crypto.Name
                                                </a>
                                                <p class="text-xs text-gray-500 dark:text-gray-400">@crypto.Symbol</p>
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <div class="font-bold text-gray-900 dark:text-white">$@crypto.CurrentPrice.ToString("N2")</div>
                                            <div class="flex items-center space-x-2 text-sm">
                                                <span class="@(crypto.PercentChange >= 0 ? "text-green-600" : "text-red-600") font-medium">
                                                    @(crypto.PercentChange >= 0 ? "+" : "")@crypto.PercentChange.ToString("N2")%
                                                </span>
                                                <span class="text-xs text-gray-500 dark:text-gray-400">24h</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stock Markets Sidebar -->
            <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
                <div class="bg-gradient-to-r from-emerald-600 to-teal-600 p-6">
                    <h2 class="text-xl font-bold text-white">Market Indices</h2>
                </div>
                <div class="p-6 space-y-4 max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-emerald-200 scrollbar-track-transparent">
                    @foreach (var index in Model.StockMarketIndices.Take(8))
                    {
                        <div class="group bg-gradient-to-r from-white to-emerald-50/50 dark:from-gray-700 dark:to-emerald-900/20 rounded-xl p-4 border border-emerald-100/50 dark:border-emerald-800/50 hover:shadow-md transition-all duration-300">
                            <div class="flex items-center justify-between">
                                <div>
                                    <a href="https://finance.yahoo.com/quote/@index.Symbol" target="_blank" class="font-semibold text-gray-900 dark:text-white hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors text-sm">
                                        @index.Name
                                    </a>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">@index.Symbol</p>
                                </div>
                                <div class="text-right">
                                    <div class="font-bold text-sm dark:text-white">@index.CurrentValue.ToString("N0")</div>
                                    <div class="@(index.PercentChange >= 0 ? "text-green-600" : "text-red-600") text-xs font-medium">
                                        @(index.PercentChange >= 0 ? "+" : "")@index.PercentChange.ToString("N2")%
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Secondary Markets Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <!-- Forex Section -->
            <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
                <div class="bg-gradient-to-r from-purple-600 to-pink-600 p-6">
                    <h2 class="text-xl font-bold text-white">Foreign Exchange</h2>
                </div>
                <div class="p-6 space-y-3 max-h-80 overflow-y-auto scrollbar-thin scrollbar-thumb-purple-200 scrollbar-track-transparent">
                    @foreach (var rate in Model.ForexRates)
                    {
                        <div class="bg-gradient-to-r from-white to-purple-50/50 dark:from-gray-700 dark:to-purple-900/20 rounded-xl p-4 border border-purple-100/50 dark:border-purple-800/50 hover:shadow-md transition-all duration-300">
                            <div class="flex items-center justify-between">
                                <div>
                                    <a href="https://www.xe.com/currencyconverter/convert/?Amount=1&From=@rate.FromCurrency&To=@rate.ToCurrency" target="_blank" class="font-semibold text-gray-900 dark:text-white hover:text-purple-600 dark:hover:text-purple-400 transition-colors">
                                        @rate.FromCurrency/@rate.ToCurrency
                                    </a>
                                </div>
                                <div class="text-right">
                                    <div class="font-bold text-gray-900 dark:text-white">@rate.Rate.ToString("N4")</div>
                                    <div class="@(rate.PercentChange >= 0 ? "text-green-600" : "text-red-600") text-sm font-medium">
                                        @(rate.PercentChange >= 0 ? "+" : "")@rate.PercentChange.ToString("N2")%
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Commodities Section -->
            <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
                <div class="bg-gradient-to-r from-orange-600 to-red-600 p-6">
                    <h2 class="text-xl font-bold text-white">Commodities</h2>
                </div>
                <div class="p-6 space-y-3 max-h-80 overflow-y-auto scrollbar-thin scrollbar-thumb-orange-200 scrollbar-track-transparent">
                    @foreach (var commodity in Model.Commodities)
                    {
                        <div class="bg-gradient-to-r from-white to-orange-50/50 dark:from-gray-700 dark:to-orange-900/20 rounded-xl p-4 border border-orange-100/50 dark:border-orange-800/50 hover:shadow-md transition-all duration-300">
                            <div class="flex items-center justify-between">
                                <div>
                                    <a href="https://www.investing.com/commodities/@(commodity.Symbol.ToLower())" target="_blank" class="font-semibold text-gray-900 dark:text-white hover:text-orange-600 dark:hover:text-orange-400 transition-colors">
                                        @commodity.Name
                                    </a>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">@commodity.Symbol</p>
                                </div>
                                <div class="text-right">
                                    <div class="font-bold text-gray-900 dark:text-white">$@commodity.CurrentPrice.ToString("N2")</div>
                                    <div class="@(commodity.PercentChange >= 0 ? "text-green-600" : "text-red-600") text-sm font-medium">
                                        @(commodity.PercentChange >= 0 ? "+" : "")@commodity.PercentChange.ToString("N2")%
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Weather Widget -->
        <div class="mb-8">
            <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
                <div class="bg-gradient-to-r from-cyan-600 to-blue-600 p-6">
                    <div class="flex items-center justify-between">
                        <h2 class="text-xl font-bold text-white">Global Financial Centers Weather</h2>
                    </div>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                        @foreach (var weather in Model.WeatherData)
                        {
                            <div class="bg-gradient-to-br from-white to-cyan-50/50 dark:from-gray-700 dark:to-cyan-900/20 border border-cyan-100/50 dark:border-cyan-800/50 rounded-2xl p-5 hover:shadow-lg transition-all duration-300">
                                <div class="flex items-center justify-between mb-3">
                                    <div>
                                        <h3 class="font-semibold text-gray-900 dark:text-white">@weather.City</h3>
                                    </div>
                                    <span class="text-3xl">
                                        @(weather.Icon switch {
                                            "clear-day" => "☀️",
                                            "partly-cloudy-day" => "⛅",
                                            "cloudy" => "☁️",
                                            "rainy" => "🌧️",
                                            "snowy" => "🌨️",
                                            "thunderstorm" => "⛈️",
                                            "foggy" => "🌫️",
                                            _ => "☀️"
                                        })
                                    </span>
                                </div>
                                <div class="text-3xl font-bold text-gray-900 dark:text-white mb-2">@weather.Temperature°</div>
                                <p class="text-sm text-gray-600 dark:text-gray-300 mb-3">@weather.Description</p>
                                <div class="grid grid-cols-2 gap-2 text-xs text-gray-500 dark:text-gray-400">
                                    <div><span class="font-medium">Feels:</span> @weather.FeelsLike</div>
                                    <div><span class="font-medium">Humidity:</span> @weather.Humidity%</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Enhanced News Section -->
        <div class="bg-white/60 dark:bg-gray-800/60 backdrop-blur-xl rounded-3xl shadow-xl border border-white/20 dark:border-gray-700/20 overflow-hidden">
            <div class="bg-gradient-to-r from-violet-600 to-purple-600 p-6">
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                    <div class="flex items-center space-x-3">
                        <h2 class="text-xl font-bold text-white">Market News</h2>
                        <div class="flex items-center space-x-2">
                            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                            <span class="text-white/80 text-sm">Live</span>
                        </div>
                    </div>
                    <div class="flex flex-col sm:flex-row gap-3">
                        <!-- Search Bar -->
                        <div class="relative">
                            <input type="text" id="news-search" placeholder="Search news..." 
                                   class="w-full sm:w-64 px-4 py-2 pl-10 rounded-xl border border-white/20 bg-white/10 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-white/30 transition-all duration-200">
                            <svg class="absolute left-3 top-2.5 w-4 h-4 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        <!-- Filter Buttons -->
                        <div class="flex flex-wrap gap-2">
                            <button class="news-filter active px-4 py-2 rounded-xl text-sm font-medium bg-white text-violet-600 hover:bg-violet-50 transition-all duration-200" data-category="all">All</button>
                            <button class="news-filter px-4 py-2 rounded-xl text-sm font-medium bg-violet-800/50 text-white hover:bg-violet-700/50 transition-all duration-200" data-category="business">Business</button>
                            <button class="news-filter px-4 py-2 rounded-xl text-sm font-medium bg-violet-800/50 text-white hover:bg-violet-700/50 transition-all duration-200" data-category="finance">Finance</button>
                            <button class="news-filter px-4 py-2 rounded-xl text-sm font-medium bg-violet-800/50 text-white hover:bg-violet-700/50 transition-all duration-200" data-category="technology">Technology</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- News Stats Bar -->
            <div class="px-6 py-3 bg-violet-50/50 dark:bg-gray-800/50 border-b border-violet-100/50 dark:border-gray-700/50">
                <div class="flex items-center justify-between text-sm text-gray-600 dark:text-gray-300">
                    <span id="news-count">Showing @Model.MarketNews.Count() articles</span>
                    <div class="flex items-center space-x-4">
                        <button id="news-sort" class="flex items-center space-x-1 hover:text-violet-600 dark:hover:text-violet-400 transition-colors">
                            <span>Sort by Latest</span>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"></path>
                            </svg>
                        </button>
                        <button id="toggle-view" class="flex items-center space-x-1 hover:text-violet-600 dark:hover:text-violet-400 transition-colors">
                            <span>Grid View</span>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <div class="p-6">
                <!-- Loading State -->
                <div id="news-loading" class="hidden">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        @for (int i = 0; i < 6; i++)
                        {
                            <div class="animate-pulse">
                                <div class="bg-gray-200 dark:bg-gray-700 aspect-video rounded-2xl mb-4"></div>
                                <div class="space-y-2">
                                    <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4"></div>
                                    <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2"></div>
                                    <div class="h-3 bg-gray-200 dark:bg-gray-700 rounded w-1/4"></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- No Results State -->
                <div id="no-results" class="hidden text-center py-12">
                    <svg class="mx-auto w-16 h-16 text-gray-400 dark:text-gray-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.467-.693-6.266-1.875L3.741 15.09A9 9 0 1020.259 15.09l-1.993-1.875A7.962 7.962 0 0112 15z"></path>
                    </svg>
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No articles found</h3>
                    <p class="text-gray-500 dark:text-gray-400">Try adjusting your search or filter criteria</p>
                </div>

                <!-- News Grid -->
                <div id="news-container" class="news-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-h-[600px] overflow-y-auto scrollbar-thin scrollbar-thumb-violet-200 scrollbar-track-transparent">
                    @foreach (var news in Model.MarketNews)
                    {
                        <article class="news-item group bg-gradient-to-br from-white to-violet-50/30 dark:from-gray-800 dark:to-gray-700/30 rounded-2xl overflow-hidden border border-violet-100/50 dark:border-gray-600/50 hover:shadow-xl transition-all duration-300 hover:scale-[1.02]" 
                                 data-category="@(news.Category?.ToLower() ?? "general")"
                                 data-title="@news.Title.ToLower()"
                                 data-source="@news.Source.ToLower()"
                                 data-timestamp="@news.Timestamp.Ticks">
                            @if (!string.IsNullOrEmpty(news.UrlToImage))
                            {
                                <div class="aspect-video overflow-hidden relative">
                                    <img src="@news.UrlToImage" 
                                         alt="@news.Title" 
                                         class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                                         onerror="this.parentElement.innerHTML='<div class=\'w-full h-full bg-gradient-to-br from-violet-100 to-purple-100 flex items-center justify-center\'><svg class=\'w-12 h-12 text-violet-400\' fill=\'none\' stroke=\'currentColor\' viewBox=\'0 0 24 24\'><path stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\'></path></svg></div>'">
                                    <!-- Reading Time Badge -->
                                    <div class="absolute top-2 left-2 bg-black/60 text-white text-xs px-2 py-1 rounded-lg">
                                        @{
                                            var wordCount = news.Summary?.Split(' ').Length ?? 0;
                                            var readingTime = Math.Max(1, wordCount / 200);
                                        }
                                        @readingTime min read
                                    </div>
                                    <!-- Source Badge -->
                                    <div class="absolute top-2 right-2 bg-violet-600/90 text-white text-xs px-2 py-1 rounded-lg font-medium">
                                        @news.Source
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="aspect-video bg-gradient-to-br from-violet-100 to-purple-100 dark:from-gray-700 dark:to-gray-600 flex items-center justify-center">
                                    <svg class="w-16 h-16 text-violet-400 dark:text-violet-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
                                    </svg>
                                </div>
                            }
                            
                            <div class="p-5">
                                <h3 class="font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 group-hover:text-violet-600 dark:group-hover:text-violet-400 transition-colors">
                                    <a href="@news.Url" target="_blank" class="hover:text-violet-600 dark:hover:text-violet-400 transition-colors" rel="noopener noreferrer">
                                        @news.Title
                                    </a>
                                </h3>
                                
                                <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-3">@news.Summary</p>
                                
                                <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 mb-3">
                                    <div class="flex items-center space-x-2">
                                        @if (!string.IsNullOrEmpty(news.Category))
                                        {
                                            <span class="px-2 py-1 bg-violet-100 dark:bg-violet-900/30 text-violet-700 dark:text-violet-300 rounded-full font-medium">@news.Category</span>
                                        }
                                        <span class="font-medium">@news.Timestamp.ToString("MMM dd, HH:mm")</span>
                                    </div>
                                </div>

                                <!-- Action Buttons -->
                                <div class="flex items-center justify-between pt-3 border-t border-gray-100 dark:border-gray-700">
                                    <a href="@news.Url" target="_blank" 
                                       class="inline-flex items-center space-x-2 text-violet-600 dark:text-violet-400 hover:text-violet-700 dark:hover:text-violet-300 font-medium text-sm transition-colors">
                                        <span>Read More</span>
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                                        </svg>
                                    </a>
                                    
                                    <div class="flex items-center space-x-2">
                                        <!-- Share Button -->
                                        <button class="share-btn p-2 rounded-lg hover:bg-violet-100 dark:hover:bg-gray-700 transition-colors" 
                                                data-url="@news.Url" 
                                                data-title="@news.Title"
                                                title="Share article">
                                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400 hover:text-violet-600 dark:hover:text-violet-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                                            </svg>
                                        </button>
                                        
                                        <!-- Bookmark Button -->
                                        <button class="bookmark-btn p-2 rounded-lg hover:bg-violet-100 dark:hover:bg-gray-700 transition-colors"
                                                title="Bookmark article">
                                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400 hover:text-violet-600 dark:hover:text-violet-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </article>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Chart.js for future enhancements -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Enhanced news functionality with search, filtering, and sorting
        document.addEventListener('DOMContentLoaded', function() {
            const newsFilters = document.querySelectorAll('.news-filter');
            const newsItems = document.querySelectorAll('.news-item');
            const searchInput = document.getElementById('news-search');
            const newsCount = document.getElementById('news-count');
            const sortButton = document.getElementById('news-sort');
            const toggleViewButton = document.getElementById('toggle-view');
            const newsContainer = document.getElementById('news-container');
            const noResults = document.getElementById('no-results');
            
            let currentSort = 'latest';
            let currentView = 'grid';
            let currentFilter = 'all';
            let currentSearch = '';
            
            // Initialize
            updateNewsCount();
            
            // Filter functionality
            newsFilters.forEach(filter => {
                filter.addEventListener('click', function() {
                    const category = this.dataset.category;
                    currentFilter = category;
                    
                    // Update active filter
                    newsFilters.forEach(f => {
                        f.classList.remove('active', 'bg-white', 'text-violet-600');
                        f.classList.add('bg-violet-800/50', 'text-white');
                    });
                    this.classList.remove('bg-violet-800/50', 'text-white');
                    this.classList.add('active', 'bg-white', 'text-violet-600');
                    
                    filterNews();
                });
            });
            
            // Search functionality
            let searchTimeout;
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    currentSearch = this.value.toLowerCase().trim();
                    filterNews();
                }, 300);
            });
            
            // Sort functionality
            sortButton.addEventListener('click', function() {
                currentSort = currentSort === 'latest' ? 'oldest' : 'latest';
                this.querySelector('span').textContent = currentSort === 'latest' ? 'Sort by Latest' : 'Sort by Oldest';
                
                // Update sort icon rotation
                const icon = this.querySelector('svg');
                icon.style.transform = currentSort === 'latest' ? 'rotate(0deg)' : 'rotate(180deg)';
                
                sortNews();
            });
            
            // View toggle functionality
            toggleViewButton.addEventListener('click', function() {
                currentView = currentView === 'grid' ? 'list' : 'grid';
                this.querySelector('span').textContent = currentView === 'grid' ? 'Grid View' : 'List View';
                
                if (currentView === 'list') {
                    newsContainer.classList.remove('grid', 'grid-cols-1', 'md:grid-cols-2', 'lg:grid-cols-3');
                    newsContainer.classList.add('space-y-4');
                    newsItems.forEach(item => {
                        item.classList.add('flex', 'flex-row');
                        const img = item.querySelector('.aspect-video');
                        if (img) {
                            img.classList.remove('aspect-video');
                            img.classList.add('w-48', 'h-32', 'flex-shrink-0');
                        }
                    });
                } else {
                    newsContainer.classList.remove('space-y-4');
                    newsContainer.classList.add('grid', 'grid-cols-1', 'md:grid-cols-2', 'lg:grid-cols-3');
                    newsItems.forEach(item => {
                        item.classList.remove('flex', 'flex-row');
                        const img = item.querySelector('img')?.parentElement;
                        if (img && img.classList.contains('w-48')) {
                            img.classList.remove('w-48', 'h-32', 'flex-shrink-0');
                            img.classList.add('aspect-video');
                        }
                    });
                }
            });
            
            // Share functionality
            document.addEventListener('click', function(e) {
                if (e.target.closest('.share-btn')) {
                    e.preventDefault();
                    const btn = e.target.closest('.share-btn');
                    const url = btn.dataset.url;
                    const title = btn.dataset.title;
                    
                    if (navigator.share) {
                        navigator.share({
                            title: title,
                            url: url
                        }).catch(console.error);
                    } else {
                        // Fallback to clipboard
                        navigator.clipboard.writeText(url).then(() => {
                            showNotification('Link copied to clipboard!');
                        }).catch(() => {
                            // Final fallback - open in new window
                            window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url)}`, '_blank');
                        });
                    }
                }
            });
            
            // Bookmark functionality
            document.addEventListener('click', function(e) {
                if (e.target.closest('.bookmark-btn')) {
                    e.preventDefault();
                    const btn = e.target.closest('.bookmark-btn');
                    const svg = btn.querySelector('svg');
                    
                    // Toggle bookmark state
                    if (svg.getAttribute('fill') === 'currentColor') {
                        svg.setAttribute('fill', 'none');
                        svg.classList.remove('text-violet-600');
                        svg.classList.add('text-gray-500');
                        showNotification('Bookmark removed');
                    } else {
                        svg.setAttribute('fill', 'currentColor');
                        svg.classList.remove('text-gray-500');
                        svg.classList.add('text-violet-600');
                        showNotification('Article bookmarked');
                    }
                }
            });
            
            function filterNews() {
                let visibleCount = 0;
                
                newsItems.forEach((item, index) => {
                    const category = item.dataset.category;
                    const title = item.dataset.title;
                    const source = item.dataset.source;
                    
                    const categoryMatch = currentFilter === 'all' || category === currentFilter;
                    const searchMatch = currentSearch === '' || 
                                      title.includes(currentSearch) || 
                                      source.includes(currentSearch);
                    
                    if (categoryMatch && searchMatch) {
                        item.classList.remove('hidden');
                        item.style.animation = 'fadeInUp 0.5s ease-out forwards';
                        setTimeout(() => {
                            item.style.animation = '';
                        }, 500);
                        visibleCount++;
                    } else {
                        item.style.animation = 'fadeOut 0.3s ease-out forwards';
                        setTimeout(() => {
                            item.classList.add('hidden');
                        }, 300);
                    }
                });
                
                // Show/hide no results message
                if (visibleCount === 0) {
                    noResults.classList.remove('hidden');
                    newsContainer.classList.add('hidden');
                } else {
                    noResults.classList.add('hidden');
                    newsContainer.classList.remove('hidden');
                }
                
                updateNewsCount(visibleCount);
            }
            
            function sortNews() {
                const itemsArray = Array.from(newsItems);
                itemsArray.sort((a, b) => {
                    const timestampA = parseInt(a.dataset.timestamp);
                    const timestampB = parseInt(b.dataset.timestamp);
                    
                    return currentSort === 'latest' ? 
                           timestampB - timestampA : 
                           timestampA - timestampB;
                });
                
                // Reorder DOM elements
                itemsArray.forEach(item => {
                    newsContainer.appendChild(item);
                });
                
                // Add stagger animation
                itemsArray.forEach((item, index) => {
                    if (!item.classList.contains('hidden')) {
                        item.style.animation = `fadeInUp 0.5s ease-out ${index * 0.05}s both`;
                    }
                });
            }
            
            function updateNewsCount(count = null) {
                if (count === null) {
                    count = newsItems.length;
                }
                newsCount.textContent = `Showing ${count} article${count !== 1 ? 's' : ''}`;
            }
            
            function showNotification(message) {
                // Create and show a temporary notification
                const notification = document.createElement('div');
                notification.className = 'fixed top-4 right-4 bg-violet-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
                notification.textContent = message;
                document.body.appendChild(notification);
                
                // Animate in
                setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                }, 100);
                
                // Remove after delay
                setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 3000);
            }
            
            // Add loading animations on page load
            const cards = document.querySelectorAll('[class*="backdrop-blur"]');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
            
            // Infinite scroll for news (if more articles are available)
            let isLoading = false;
            newsContainer.addEventListener('scroll', function() {
                if (isLoading) return;
                
                const { scrollTop, scrollHeight, clientHeight } = this;
                if (scrollTop + clientHeight >= scrollHeight - 5) {
                    // Trigger loading more articles (placeholder for future implementation)
                    console.log('Load more articles...');
                }
            });
        });

        // Auto-refresh data every 5 minutes
        setInterval(() => {
            const indicators = document.querySelectorAll('.animate-pulse');
            indicators.forEach(indicator => {
                indicator.style.animation = 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite';
            });
        }, 300000);
    </script>

    <style>
        /* Ultra-modern CSS with glass morphism */
        @@keyframes fadeInUp {
            from { 
                opacity: 0; 
                transform: translateY(30px) scale(0.95); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0) scale(1); 
            }
        }

        @@keyframes fadeOut {
            from { 
                opacity: 1; 
                transform: scale(1); 
            }
            to { 
                opacity: 0; 
                transform: scale(0.95); 
            }
        }

        @@keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        @@keyframes shimmer {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }

        /* Glass morphism effects */
        .backdrop-blur-xl {
            backdrop-filter: blur(16px);
            -webkit-backdrop-filter: blur(16px);
        }

        /* Enhanced scrollbars */
        .scrollbar-thin {
            scrollbar-width: thin;
        }

        .scrollbar-thumb-blue-200::-webkit-scrollbar-thumb {
            background-color: #bfdbfe;
            border-radius: 9999px;
        }

        .scrollbar-thumb-emerald-200::-webkit-scrollbar-thumb {
            background-color: #a7f3d0;
            border-radius: 9999px;
        }

        .scrollbar-thumb-purple-200::-webkit-scrollbar-thumb {
            background-color: #e9d5ff;
            border-radius: 9999px;
        }

        .scrollbar-thumb-orange-200::-webkit-scrollbar-thumb {
            background-color: #fed7aa;
            border-radius: 9999px;
        }

        .scrollbar-thumb-violet-200::-webkit-scrollbar-thumb {
            background-color: #e4d4f4;
            border-radius: 9999px;
        }

        .scrollbar-track-transparent::-webkit-scrollbar-track {
            background: transparent;
        }

        .scrollbar-thin::-webkit-scrollbar {
            width: 4px;
            height: 4px;
        }

        /* Hover effects */
        .group:hover .group-hover\:scale-105 {
            transform: scale(1.05);
        }

        .hover\:scale-\[1\.02\]:hover {
            transform: scale(1.02);
        }

        /* Line clamp utility */
        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        /* Modern gradient text */
        .bg-clip-text {
            -webkit-background-clip: text;
            background-clip: text;
        }

        /* Enhanced button animations */
        .news-filter {
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transform: translateY(0);
        }

        .news-filter:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .news-filter.active {
            box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
        }

        /* Card hover animations */
        .group {
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .group:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        /* Loading shimmer effect */
        .shimmer {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: shimmer 2s infinite;
        }

        /* Responsive grid improvements */
        @@media (max-width: 768px) {
            .backdrop-blur-xl {
                backdrop-filter: blur(8px);
                -webkit-backdrop-filter: blur(8px);
            }
        }

        /* Custom focus states */
        .news-filter:focus {
            outline: none;
            ring: 2px;
            ring-color: rgba(139, 92, 246, 0.5);
        }

        /* Enhanced pulse animation for live indicators */
        @@keyframes pulse {
            0%, 100% {
                opacity: 1;
                transform: scale(1);
            }
            50% {
                opacity: 0.5;
                transform: scale(1.1);
            }
        }

        .animate-pulse {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
    </style>
}
